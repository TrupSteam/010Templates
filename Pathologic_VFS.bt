//------------------------------------------------
//--- 010 Editor v9.0 Binary Template
//
//      File: Pathologic VFS 
//   Authors: https://github.com/TrupSteam
//   Version: 24.06.2020
//   Purpose: archive unpack
//  Category: 
// File Mask: *.VFS
//  ID Bytes: 
//   History: https://wiki.xentax.com/index.php/Pathologic
//------------------------------------------------

struct VFS_HEADER{
    char LP1C[4] <format=hex>; 
    uint32 number_of_subdirs;
    uint32 number_of_files;
};

struct FAT{
    byte name_length;
    char file_name[name_length]; 
    uint32 data_len;
    uint32 data_offset;
    uint64 unknown_uid  <format=hex>;
};

struct FAT_ARR (int arraySize){
   FAT files[arraySize] <optimize=false>;
};

struct FAT_DIR{
    byte name_length;
    char file_name[name_length]; 
    uint32 unknown_uid;    
    uint32 number_of_files;
};

struct SUB_DIR{
    FAT_DIR subdir;
    FAT files[subdir.number_of_files] <optimize=false>;
};

struct DIR_ARR (int arraySize){
    SUB_DIR sub_dir[arraySize] <optimize=false>;
};


VFS_HEADER top_header;
if(!top_header.number_of_files) return;
FAT_ARR top_file(top_header.number_of_files);
if(!top_header.number_of_subdirs) return;
DIR_ARR sub_dir(top_header.number_of_subdirs);





